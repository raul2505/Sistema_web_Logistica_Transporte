# Generated by Django 5.1.6 on 2025-02-24 17:46

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Applicant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombres", models.CharField(max_length=100)),
                ("apellidos", models.CharField(max_length=100)),
                ("numero_celular", models.CharField(max_length=9, unique=True)),
                ("correo", models.EmailField(max_length=254, unique=True)),
                (
                    "dni_frontal",
                    models.ImageField(blank=True, null=True, upload_to="dni/"),
                ),
                (
                    "dni_posterior",
                    models.ImageField(blank=True, null=True, upload_to="dni/"),
                ),
                (
                    "tipo_licencia",
                    models.CharField(choices=[("A4", "A4")], max_length=2),
                ),
                (
                    "tipo_licencia_formato",
                    models.CharField(
                        choices=[("fisica", "Física"), ("electronica", "Electrónica")],
                        max_length=11,
                    ),
                ),
                (
                    "licencia_frontal",
                    models.ImageField(blank=True, null=True, upload_to="licencias/"),
                ),
                (
                    "licencia_posterior",
                    models.ImageField(blank=True, null=True, upload_to="licencias/"),
                ),
                (
                    "licencia_electronica",
                    models.ImageField(blank=True, null=True, upload_to="licencias/"),
                ),
                (
                    "experiencia",
                    models.CharField(
                        choices=[("si", "Sí"), ("no", "No")], max_length=2
                    ),
                ),
                ("fecha_registro", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Camion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("foto_camion", models.ImageField(upload_to="camiones/")),
                (
                    "placa",
                    models.CharField(
                        max_length=10,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Formato inválido de placa.",
                                regex="^[A-Z0-9-]+$",
                            )
                        ],
                    ),
                ),
                (
                    "marca",
                    models.CharField(
                        choices=[
                            ("Isuzu", "Isuzu"),
                            ("Foton", "Foton"),
                            ("Hino", "Hino"),
                            ("International", "International"),
                            ("Mercedes-Benz", "Mercedes-Benz"),
                            ("Volvo", "Volvo"),
                            ("Scania", "Scania"),
                            ("MAN", "MAN"),
                            ("Hyundai", "Hyundai"),
                            ("Dongfeng", "Dongfeng"),
                            ("JAC", "JAC"),
                            ("FAW", "FAW"),
                            ("Sinotruk", "Sinotruk"),
                            ("Shacman", "Shacman"),
                            ("Kenworth", "Kenworth"),
                            ("Freightliner", "Freightliner"),
                        ],
                        max_length=50,
                    ),
                ),
                ("modelo", models.CharField(max_length=50)),
                (
                    "year_fabricacion",
                    models.PositiveIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1900),
                            django.core.validators.MaxValueValidator(2025),
                        ]
                    ),
                ),
                (
                    "capacidad_carga",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                (
                    "tipo_camion",
                    models.CharField(
                        choices=[
                            ("Camión rígido", "Camión rígido"),
                            ("Tráiler", "Tráiler"),
                            ("Camión cisterna", "Camión cisterna"),
                            ("Camión frigorífico", "Camión frigorífico"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "estado_operativo",
                    models.CharField(
                        choices=[
                            ("Activo", "Activo"),
                            ("En mantenimiento", "En mantenimiento"),
                            ("Requiere Mantenimiento", "Requiere Mantenimiento"),
                        ],
                        default="Activo",
                        max_length=25,
                    ),
                ),
                ("fecha_adquisicion", models.DateField(default=datetime.date.today)),
                (
                    "propietario_vehiculo",
                    models.CharField(default="Desconocido", max_length=100),
                ),
                (
                    "rendimiento_combustible",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                ("notas", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Empresa",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("logo_empresa", models.ImageField(upload_to="empresas/")),
                ("nombre_empresa", models.CharField(max_length=50)),
                ("ruc_empresa", models.CharField(max_length=11, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="ExamenMedico",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("medicina_general", "Medicina General"),
                            ("toxicologico", "Toxicológico"),
                            ("oftalmologia", "Oftalmología"),
                            ("otorrinolaringologia", "Otorrinolaringología"),
                        ],
                        max_length=50,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Mecanico",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombres", models.CharField(max_length=100)),
                ("apellidos", models.CharField(max_length=100)),
                ("telefono", models.CharField(max_length=9)),
                (
                    "foto",
                    models.ImageField(blank=True, null=True, upload_to="mecanicos/"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SolicitudServicio",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombres", models.CharField(max_length=100)),
                ("apellidos", models.CharField(max_length=100)),
                ("telefono", models.CharField(max_length=15)),
                ("correo", models.EmailField(max_length=100)),
                ("ruc_empresa", models.CharField(max_length=11)),
                ("nombre_empresa", models.CharField(max_length=100)),
                ("mensaje", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="Ubicacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "direccion",
                    models.CharField(max_length=255, verbose_name="Dirección"),
                ),
                (
                    "latitud",
                    models.DecimalField(
                        decimal_places=6,
                        default=0.0,
                        max_digits=9,
                        verbose_name="Latitud",
                    ),
                ),
                (
                    "longitud",
                    models.DecimalField(
                        decimal_places=6,
                        default=0.0,
                        max_digits=9,
                        verbose_name="Longitud",
                    ),
                ),
                (
                    "provincia",
                    models.CharField(max_length=100, verbose_name="Provincia"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "dni",
                    models.CharField(max_length=8, unique=True, verbose_name="DNI"),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, max_length=15, null=True, verbose_name="Teléfono"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "empresa",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myapp.empresa",
                        verbose_name="Empresa",
                    ),
                ),
            ],
            options={
                "verbose_name": "Usuario",
                "verbose_name_plural": "Usuarios",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Chofer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombres", models.CharField(max_length=100)),
                ("apellidos", models.CharField(max_length=100)),
                ("fecha_nacimiento", models.DateField()),
                ("domicilio", models.CharField(max_length=200)),
                ("telefono", models.CharField(max_length=9)),
                ("tipo_licencia", models.CharField(max_length=3)),
                ("numero_licencia", models.CharField(max_length=20, unique=True)),
                ("fecha_emision", models.DateField()),
                ("fecha_vencimiento", models.DateField()),
                ("estado_salud", models.CharField(max_length=100)),
                (
                    "camion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="myapp.camion",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuario asociado",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CombusExtraChofer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("placa", models.CharField(max_length=50)),
                ("montoRecarga", models.CharField(max_length=50)),
                ("fecha", models.DateField()),
                (
                    "tipoGasto",
                    models.CharField(choices=[("Efectivo", "Efectivo")], max_length=50),
                ),
                (
                    "tipoCombustible",
                    models.CharField(
                        choices=[("GLP", "GLP"), ("GNV", "GNV")], max_length=50
                    ),
                ),
                (
                    "metodoPago",
                    models.CharField(
                        choices=[
                            ("Efectivo", "Efectivo"),
                            ("Transferencia", "Transferencia"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("Aprobado", "Apobado"),
                            ("En proceso", "En proceso"),
                            ("Rechazado", "Rechazado"),
                        ],
                        default="En proceso",
                        max_length=50,
                    ),
                ),
                (
                    "chofer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="myapp.chofer",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ContratoAlianza",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("documento", models.FileField(upload_to="contratos/")),
                ("fecha_revision", models.DateTimeField(auto_now=True)),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("pendiente", "Pendiente"),
                            ("aprobado", "Aprobado"),
                            ("rechazada", "Rechazado"),
                        ],
                        default="pendiente",
                        max_length=20,
                    ),
                ),
                (
                    "empresa",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myapp.empresa",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="camion",
            name="empresa_propietaria",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="camiones_empresa",
                to="myapp.empresa",
            ),
        ),
        migrations.CreateModel(
            name="GuiaRemision",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo_guia",
                    models.CharField(
                        choices=[
                            ("TRANSPORTE", "Transporte"),
                            ("REMITENTE", "Remitente"),
                        ],
                        max_length=15,
                        verbose_name="Tipo de Guía",
                    ),
                ),
                ("fecha_emision", models.DateField(verbose_name="Fecha de Emisión")),
                ("fecha_traslado", models.DateField(verbose_name="Fecha de Traslado")),
                (
                    "peso_total",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Peso Total (kg)"
                    ),
                ),
                (
                    "costo_traslado",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Costo de Traslado",
                    ),
                ),
                (
                    "fecha_traslado_chofer",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Fecha de Traslado por Chofer",
                    ),
                ),
                (
                    "observaciones",
                    models.TextField(
                        blank=True, null=True, verbose_name="Observaciones"
                    ),
                ),
                (
                    "pdf_generado",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="guias/pdf_generado/",
                        verbose_name="PDF Generado",
                    ),
                ),
                (
                    "pdf_firmado",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="guias/pdf_firmado/",
                        verbose_name="PDF Firmado",
                    ),
                ),
                (
                    "fecha_firma_destinatario",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Fecha de Firma Destinatario",
                    ),
                ),
                (
                    "empresa_destinataria",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="guias_recibidas",
                        to="myapp.empresa",
                        verbose_name="Empresa Destinataria",
                    ),
                ),
                (
                    "empresa_emisora",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="guias_emitidas",
                        to="myapp.empresa",
                        verbose_name="Empresa Emisora",
                    ),
                ),
                (
                    "empresa_remitente",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="guias_remitidas",
                        to="myapp.empresa",
                        verbose_name="Empresa Remitente",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DetalleGuiaRemision",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cantidad", models.PositiveIntegerField(verbose_name="Cantidad")),
                (
                    "descripcion",
                    models.TextField(
                        blank=True, null=True, verbose_name="Descripción Adicional"
                    ),
                ),
                (
                    "unidad",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="Unidad"
                    ),
                ),
                (
                    "guia",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="detalles",
                        to="myapp.guiaremision",
                        verbose_name="Guía de Remisión",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HojadeRuta",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("pendiente", "Pendiente"),
                            ("en_ruta", "En Ruta"),
                            ("finalizado", "Finalizado"),
                            ("iniciar", "Iniciar"),
                        ],
                        default="pendiente",
                        max_length=50,
                        verbose_name="Estado",
                    ),
                ),
                (
                    "distancia",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Distancia (km)"
                    ),
                ),
                (
                    "camion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myapp.camion",
                        verbose_name="Camión",
                    ),
                ),
                (
                    "chofer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myapp.chofer",
                        verbose_name="Chofer",
                    ),
                ),
                (
                    "llegada_ubicacion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="llegada",
                        to="myapp.ubicacion",
                        verbose_name="Ubicación de Llegada",
                    ),
                ),
                (
                    "partida_ubicacion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="partida",
                        to="myapp.ubicacion",
                        verbose_name="Ubicación de Partida",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="guiaremision",
            name="hoja_de_ruta",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="myapp.hojaderuta",
                verbose_name="Hoja de Ruta",
            ),
        ),
        migrations.CreateModel(
            name="Mantenimiento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fecha_mantenimiento", models.DateField()),
                (
                    "tipo_mantenimiento",
                    models.CharField(
                        choices=[
                            ("Preventivo", "Preventivo"),
                            ("Correctivo", "Correctivo"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "estado_mantenimiento",
                    models.CharField(
                        choices=[
                            ("Pendiente", "Pendiente"),
                            ("En Proceso", "En Proceso"),
                            ("Finalizado", "Finalizado"),
                        ],
                        default="Pendiente",
                        max_length=20,
                    ),
                ),
                (
                    "camion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="myapp.camion"
                    ),
                ),
                (
                    "taller",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="myapp.mecanico"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Mantenimiento_Detalle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("descripcion_servicio_repuesto", models.CharField(max_length=200)),
                ("cantidad", models.PositiveIntegerField()),
                (
                    "costo_unitario",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                (
                    "costo_total",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        editable=False,
                        max_digits=10,
                    ),
                ),
                (
                    "mantenimiento",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myapp.mantenimiento",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Factura",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("numero_factura", models.CharField(max_length=50, unique=True)),
                ("fecha_emision", models.DateField()),
                (
                    "monto_total",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                (
                    "metodo_pago",
                    models.CharField(
                        choices=[
                            ("Efectivo", "Efectivo"),
                            ("Transferencia", "Transferencia"),
                        ],
                        max_length=15,
                    ),
                ),
                (
                    "estado_pago",
                    models.CharField(
                        choices=[("Pagado", "Pagado"), ("Pendiente", "Pendiente")],
                        max_length=15,
                    ),
                ),
                (
                    "mantenimiento",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="myapp.mantenimiento",
                    ),
                ),
                (
                    "taller",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="myapp.mecanico"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MotivoMantenimiento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("motivo", models.TextField()),
                ("fecha_registro", models.DateTimeField(auto_now_add=True)),
                (
                    "camion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="motivos_mantenimiento",
                        to="myapp.camion",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="mantenimiento",
            name="motivo",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                to="myapp.motivomantenimiento",
            ),
        ),
        migrations.CreateModel(
            name="Notificacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("mensaje", models.TextField()),
                ("leido", models.BooleanField(default=False)),
                ("fecha_creacion", models.DateTimeField(auto_now_add=True)),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Postulante",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombres", models.CharField(max_length=100)),
                ("apellidos", models.CharField(max_length=100)),
                ("numero_celular", models.CharField(max_length=9, unique=True)),
                ("correo", models.EmailField(max_length=254, unique=True)),
                (
                    "dni_frontal",
                    models.ImageField(blank=True, null=True, upload_to="dni/"),
                ),
                (
                    "dni_posterior",
                    models.ImageField(blank=True, null=True, upload_to="dni/"),
                ),
                (
                    "tipo_licencia",
                    models.CharField(choices=[("A4", "A4")], max_length=2),
                ),
                (
                    "tipo_licencia_formato",
                    models.CharField(
                        choices=[("fisica", "Física"), ("electronica", "Electrónica")],
                        max_length=11,
                    ),
                ),
                (
                    "licencia_frontal",
                    models.ImageField(blank=True, null=True, upload_to="licencias/"),
                ),
                (
                    "licencia_posterior",
                    models.ImageField(blank=True, null=True, upload_to="licencias/"),
                ),
                (
                    "licencia_electronica",
                    models.ImageField(blank=True, null=True, upload_to="licencias/"),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("primera_pendiente", "Primera Etapa - Pendiente"),
                            ("primera_aprobada", "Primera Etapa - Aprobada"),
                            ("primera_rechazada", "Primera Etapa - Rechazada"),
                            ("segunda_pendiente", "Segunda Etapa - Pendiente"),
                            ("segunda_aprobada", "Segunda Etapa - Aprobada"),
                            ("segunda_rechazada", "Segunda Etapa - Rechazada"),
                            ("tercera_pendiente", "Tercera Etapa - Pendiente"),
                            ("tercera_aprobada", "Tercera Etapa - Aprobada"),
                            ("tercera_rechazada", "Tercera Etapa - Rechazada"),
                            ("cuarta_pendiente", "Cuarta Etapa - Pendiente"),
                            ("cuarta_aprobada", "Cuarta Etapa - Aprobada"),
                            ("cuarta_rechazada", "Cuarta Etapa - Rechazada"),
                        ],
                        default="primera_pendiente",
                        max_length=30,
                    ),
                ),
                (
                    "experiencia",
                    models.CharField(
                        choices=[("si", "Sí"), ("no", "No")], max_length=2
                    ),
                ),
                (
                    "referencias_trabajos",
                    models.FileField(blank=True, null=True, upload_to="documentos/"),
                ),
                (
                    "record_conduccion",
                    models.FileField(blank=True, null=True, upload_to="documentos/"),
                ),
                (
                    "historial_papeletas",
                    models.ImageField(blank=True, null=True, upload_to="documentos/"),
                ),
                (
                    "antecedentes_penales",
                    models.FileField(blank=True, null=True, upload_to="documentos/"),
                ),
                (
                    "clinica",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("montefiori", "Clínica Montefiori"),
                            ("suiza_lab", "Clínica Suiza Lab"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "resultado_medicina_general",
                    models.FileField(
                        blank=True,
                        help_text="Resultado del examen de medicina general",
                        null=True,
                        upload_to="resultados_medicos/",
                    ),
                ),
                (
                    "resultado_toxicologico",
                    models.FileField(
                        blank=True,
                        help_text="Resultado del examen toxicológico",
                        null=True,
                        upload_to="resultados_medicos/",
                    ),
                ),
                (
                    "resultado_oftalmologia",
                    models.FileField(
                        blank=True,
                        help_text="Resultado del examen de oftalmología",
                        null=True,
                        upload_to="resultados_medicos/",
                    ),
                ),
                (
                    "resultado_otorrinolaringologia",
                    models.FileField(
                        blank=True,
                        help_text="Resultado del examen de otorrinolaringología",
                        null=True,
                        upload_to="resultados_medicos/",
                    ),
                ),
                ("fecha_registro", models.DateTimeField(auto_now_add=True)),
                (
                    "examenes_requeridos",
                    models.ManyToManyField(blank=True, to="myapp.examenmedico"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RechazoContrato",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("motivo", models.TextField()),
                ("fecha_rechazo", models.DateTimeField(auto_now_add=True)),
                (
                    "contrato",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myapp.contratoalianza",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RechazoSoliCombus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("motivo", models.TextField()),
                ("fecha_rechazo", models.DateTimeField(auto_now_add=True)),
                (
                    "solicitud",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myapp.combusextrachofer",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RegistroNormativas",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("descripcion", models.TextField()),
                ("fecha_registro", models.DateTimeField(auto_now_add=True)),
                (
                    "contador",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Ruta",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("partida", models.CharField(max_length=100)),
                ("llegada", models.CharField(max_length=100)),
                ("fecha", models.DateField()),
                ("carga", models.CharField(max_length=200)),
                ("destinatario", models.CharField(max_length=200)),
                (
                    "camion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="myapp.camion",
                    ),
                ),
                (
                    "chofer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="myapp.chofer",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GastoAdicional",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("idGasto", models.CharField(max_length=4)),
                ("placa", models.CharField(max_length=50)),
                ("montoRecarga", models.CharField(max_length=50)),
                (
                    "tipoGasto",
                    models.CharField(choices=[("Efectivo", "Efectivo")], max_length=50),
                ),
                (
                    "chofer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="myapp.chofer",
                    ),
                ),
                (
                    "ruta",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="myapp.ruta",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FacturaCombustible",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("monto", models.CharField(max_length=30)),
                ("placa", models.CharField(max_length=50)),
                ("ruc", models.CharField(max_length=16)),
                ("fecha", models.DateField()),
                ("factura", models.ImageField(upload_to="factura/")),
                (
                    "chofer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="myapp.chofer",
                    ),
                ),
                (
                    "ruta",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="myapp.ruta",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="combusextrachofer",
            name="ruta",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="myapp.ruta",
            ),
        ),
        migrations.CreateModel(
            name="SolicitudAlianza",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("solicitud", models.FileField(upload_to="Solicitud/")),
                ("descripcion", models.TextField()),
                ("fecha_solicitud", models.DateTimeField(auto_now_add=True)),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("pendiente", "Pendiente"),
                            ("aprobada", "Aprobada"),
                            ("rechazada", "Rechazada"),
                        ],
                        default="pendiente",
                        max_length=20,
                    ),
                ),
                (
                    "solicitante",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RechazoSolicitud",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("motivo", models.TextField()),
                ("fecha_rechazo", models.DateTimeField(auto_now_add=True)),
                (
                    "solicitud",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myapp.solicitudalianza",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="contratoalianza",
            name="solicitud",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, to="myapp.solicitudalianza"
            ),
        ),
        migrations.CreateModel(
            name="TransferenciaPagada",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("descripcion", models.TextField(blank=True, null=True)),
                ("fecha", models.DateField()),
                ("monto", models.CharField(max_length=30)),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("Aprobado", "Apobado"),
                            ("En proceso", "En proceso"),
                            ("Rechazado", "Rechazado"),
                        ],
                        default="En proceso",
                        max_length=50,
                    ),
                ),
                ("factura", models.ImageField(upload_to="facturaTransferencia/")),
                (
                    "chofer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="myapp.chofer",
                    ),
                ),
            ],
        ),
    ]
